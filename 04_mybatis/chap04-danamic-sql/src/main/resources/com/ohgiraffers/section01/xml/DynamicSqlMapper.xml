<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">


    <resultMap id="menuResultMap" type="com.ohgiraffers.common.MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_SATUS"/>
    </resultMap>

    <select id="selectMenuByPrice" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.MENU_PRICE,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <!-- gte( >= ) , lte( <= ) 등호를 문자열로 인식해서 저렇게 씀-->
        <if test="price gte 0 and price lte 10000">
            <!-- 등호 사용하려면 CDATA[] 괄호 안에 넣어서 해줌 -->
            <![CDATA[
            AND A.MENU_PRICE < #{ price }
            ]]>

        </if>

        <if test="price gt 10000 and price lte 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{ price }
        </if>

        <if test="price gt 20000 and price lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{ price }
        </if>

        <if test="price gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{ price }
        </if>
    </select>

    <select id="searchMenu" parameterType="SearchCriteria" resultMap = "menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.MENU_PRICE,
            A.CATEGORY_CODE
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{ value }, '%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{ value }
        </if>
    </select>

    <!--choose(when/otherwise) 태그-->
    <!--when 태그 test 속성 조건에 부합하면 <when> 엘리먼트 구문을 쿼리에 포함한다
        어떠한 조건도 만족하지 못하면 <otherwise> 엘리먼트 구문을 쿼리에 포함한다-->
    <select id="searchMenuBySupCategory" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN (4,5,6,7)
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN (8,9)
            </when>
            <otherwise>
                AND A.CATEGORY_CODE IN (10,11,12)
            </otherwise>
        </choose>
    </select>

    <!-- <foreach> 태그 : java 의 for 문 역할을 수행한다
                        1. collection 속성 : 반복을 수행할 대상
                        2. item 속성 : 반복을 수행할 때마다 꺼내올 값의 이름 설정
                        3. open 속성 : 구문의 가장 앞에 올 글자
                        4. separator : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
                        5. close 속성 : 구문의 가장 마지막에 올 글자
    -->
    <select id="searchMenuByRandomMenuCode" parameterType="hashMap" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        AND A.MENU_CODE IN
        <foreach collection="@com.ohgiraffers.section01.xml.Application@createRandomMenuCodeList()"
                 item="menuCode" open="(" separator="," close=")">
            #{ menuCode }
        </foreach>
    </select>


    <select id="searchMenuByCodeOrSearchAll" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.MENU_PRICE,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition != null and condition eq 'menuCode'">
            WHERE A.MENU_CODE = #{ value }
        </if>
    </select>

    <!-- <where> 태그 : 엘리먼트 구문이 where 로 시작하지 않으면 자동으로 where 을 붙여준다.
                        또한 where 엘리먼트 내부에 모든 쿼리문이 추가되지 않는 상황인 경우 where 을 무시한다.
                        단, name 부분에 where을 빼주지 않으면 where where 로 2개가 생성될 수 있다.
                        엘리먼트 구문이 AND, OR, 로 시작하면 자동으로 해당단어를 지워준다.
        <trim> 태그 : 조회 조건에 AND 혹은 OR 로 시작하지 않는 다른 문자로 시작하는 경우 등
                     where 엘리먼트가 기본적으로 처리하는 기능에 추가규칙을 정의하기 위해 trim 엘리먼트를 제공한다.
                     1. prefix 속성 : 처리 후 엘리먼트의 내용이 있으면 가장 앞에 붙여주는 내용 기술
                     2. prefixOverride : 처리 후 엘리먼트 내용 중 가장 앞에 속성값에 해당하는 문자를 자동 삭제
                     3. suffix 속성 : 처리 후 엘리먼트의 내용이 있으면 가장 뒤에 붙여주는 내용 기술
                     5. suffixOverrides 속성 : 처리 후 엘리먼트 내용 중 가장 뒤에 속성값에 해당하는 문자를 자동 삭제 -->
    <select id="searchMenuByNameOrCategory" parameterType="hashMap" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.MENU_PRICE,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM TBL_MENU A
       <!-- <if test="namevalue != null">
            WHERE A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
        </if>
        <if test="categoryValue != null">
            AND A.CATEGORY_CODE = #{ categoryValue }
        </if>-->

        <!-- <where> 태그 이용 해결 -->
       <!-- <where>
            <if test="namevalue != null">
                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND A.CATEGORY_CODE = #{ categoryValue }
            </if>
        </where>-->

        <!-- <trim> 태그 이용 해결 -->
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="namevalue != null">
                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND A.CATEGORY_CODE = #{ categoryValue }
            </if>
        </trim>
    </select>

    <update id="modifyMenu" parameterType="hashMap">
        UPDATE TBL_MENU
        <trim prefix="SET" prefixOverrides=",">
            <if test="name != null">
                MENU_NAME = #{ name }
            </if>
            <if test="categoryCode != null">
                , CATEGORY_CODE = #{ categoryCode }
            </if>
            <if test="orderableStatus != null">
                , ORDERABLE_STATUS = #{ orderableStatus }
            </if>
        </trim>
        WHERE MENU_CODE = #{ code }
    </update>
    <!--section01의 mapper 경로랑 맞춰서 만든 xml 임-->
</mapper>